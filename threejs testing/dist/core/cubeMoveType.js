import { XYZ } from "./dataTypes";
import * as MoveNotation from "./cubeMoveData";
const U = { move: MoveNotation.U, axis: new XYZ(0, -Math.PI / 2, 0) };
const L = { move: MoveNotation.L, axis: new XYZ(Math.PI / 2, 0, 0) };
const F = { move: MoveNotation.F, axis: new XYZ(0, 0, -Math.PI / 2) };
const R = { move: MoveNotation.R, axis: new XYZ(-Math.PI / 2, 0, 0) };
const B = { move: MoveNotation.B, axis: new XYZ(0, 0, Math.PI / 2) };
const D = { move: MoveNotation.D, axis: new XYZ(0, Math.PI / 2, 0) };
const u = { move: MoveNotation.u, axis: new XYZ(0, -Math.PI / 2, 0) };
const l = { move: MoveNotation.l, axis: new XYZ(Math.PI / 2, 0, 0) };
const f = { move: MoveNotation.f, axis: new XYZ(0, 0, -Math.PI / 2) };
const r = { move: MoveNotation.r, axis: new XYZ(-Math.PI / 2, 0, 0) };
const b = { move: MoveNotation.b, axis: new XYZ(0, 0, Math.PI / 2) };
const d = { move: MoveNotation.d, axis: new XYZ(0, Math.PI / 2, 0) };
const x = { move: MoveNotation.x, axis: new XYZ(-Math.PI / 2, 0, 0) };
const y = { move: MoveNotation.y, axis: new XYZ(0, -Math.PI / 2, 0) };
const z = { move: MoveNotation.z, axis: new XYZ(0, 0, -Math.PI / 2) };
const M = { move: MoveNotation.M, axis: new XYZ(Math.PI / 2, 0, 0) };
const E = { move: MoveNotation.E, axis: new XYZ(0, Math.PI / 2, 0) };
const S = { move: MoveNotation.S, axis: new XYZ(0, 0, -Math.PI / 2) };
const wait = { move: MoveNotation.wait, axis: new XYZ(0, 0, 0) };
export { U, L, F, R, B, D, u, l, f, r, b, d, x, y, z, M, E, S, wait };
//# sourceMappingURL=cubeMoveType.js.map